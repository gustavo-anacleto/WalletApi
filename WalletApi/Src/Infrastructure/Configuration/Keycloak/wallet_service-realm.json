{
  "id": "d92a6639-d3ee-4858-ace4-65997aae9995",
  "realm": "wallet_service",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 3600,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": true,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "0521bcf7-0879-4f40-97a2-a0cb8faf7545",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "d92a6639-d3ee-4858-ace4-65997aae9995",
        "attributes": {}
      },
      {
        "id": "fa6b87a5-de33-4f32-babb-c56087db5034",
        "name": "default-roles-wallet_service",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "d92a6639-d3ee-4858-ace4-65997aae9995",
        "attributes": {}
      },
      {
        "id": "edac72b6-26af-4fcf-9e36-a4725a612c96",
        "name": "ADMIN",
        "description": "",
        "composite": true,
        "composites": {
          "client": {
            "realm-management": [
              "manage-users"
            ]
          }
        },
        "clientRole": false,
        "containerId": "d92a6639-d3ee-4858-ace4-65997aae9995",
        "attributes": {}
      },
      {
        "id": "63c9adc1-bd3a-4e3a-99ea-db21c7e5ecdc",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "d92a6639-d3ee-4858-ace4-65997aae9995",
        "attributes": {}
      },
      {
        "id": "a1a177b5-8b37-480d-a8e0-2234a19a7113",
        "name": "USER",
        "description": "",
        "composite": true,
        "composites": {
          "client": {
            "account": [
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "d92a6639-d3ee-4858-ace4-65997aae9995",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "e72fac6c-8ce9-44f8-a621-9fa5853e89c1",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "39366482-32e1-449e-980e-84cc54d91c63",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-users",
                "manage-clients",
                "query-groups",
                "query-realms",
                "query-clients",
                "query-users",
                "manage-authorization",
                "manage-identity-providers",
                "create-client",
                "view-authorization",
                "manage-events",
                "manage-realm",
                "view-users",
                "view-events",
                "view-clients",
                "view-realm",
                "impersonation",
                "view-identity-providers"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "34282da9-eb8d-46e1-a9b2-23f97d0590b0",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "7aab8ffb-0350-4597-8421-c124456864d7",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "888b7e4f-ee83-4cf8-a051-092bed3522a7",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "8179b5b1-9d78-4fa5-a401-8cbbef97ca7c",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "e1334d03-83cc-4882-b1ee-a5e29d369c3e",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "04034920-bfaa-46ec-b345-74347a76c4d6",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "ff47e31a-0900-43b3-bbf5-9e2e857d0657",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "307f6efb-ade5-4046-8ac8-65bcfb082a47",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "351ee71c-3b13-4eeb-ace4-a75c60ed35b1",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "d33d770b-be43-403f-8aa4-31459116e1d3",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "cd02a8a0-d1d3-4201-be3c-3a8c237c99a6",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "7b9cfaa2-09de-4c21-bb79-ff7cffab7fc5",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "a96c4e35-3bad-4497-aea0-c1d3cc6d155d",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "eed4d462-2e96-4aed-b9e4-2280a0411672",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "5818c013-a625-4662-aaf1-22128b2840da",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "590b0353-257e-4592-b9b5-4ab22352aaaf",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        },
        {
          "id": "f3b9275e-365c-4634-b5d6-86b3de044ef9",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "d493b43c-e5da-450d-8241-a5c0f264a9df",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "45956fa0-2aa3-476d-ac24-9ce5599a1312",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "c64aec93-0984-4326-b8e4-89dc59234a61",
          "attributes": {}
        }
      ],
      "wallet-client": [
        {
          "id": "ac7b1af9-0f04-4f93-bfe4-b2940a488c73",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "fdf3281a-e505-4fb4-8296-0b215f09f326",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "9e3efa6d-a5e4-4e1f-9784-1e4af281b0de",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "7f53df7d-ad12-4d6f-92da-9606af8f8957",
          "attributes": {}
        },
        {
          "id": "fa792e7e-ca1c-48f3-8650-53aedf409c69",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f53df7d-ad12-4d6f-92da-9606af8f8957",
          "attributes": {}
        },
        {
          "id": "bcf161a7-aa68-42b7-9504-2750aa1f9898",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "7f53df7d-ad12-4d6f-92da-9606af8f8957",
          "attributes": {}
        },
        {
          "id": "ce51c0fa-d92b-48c7-89e2-9fea66d27d6f",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f53df7d-ad12-4d6f-92da-9606af8f8957",
          "attributes": {}
        },
        {
          "id": "98b782d1-b02c-4972-8fc4-cebe1f601cc2",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f53df7d-ad12-4d6f-92da-9606af8f8957",
          "attributes": {}
        },
        {
          "id": "0cdb2a6b-f8f2-4954-b76e-033cc53677fe",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f53df7d-ad12-4d6f-92da-9606af8f8957",
          "attributes": {}
        },
        {
          "id": "8cb54249-026c-4b7e-99e0-16e7f27f44c7",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f53df7d-ad12-4d6f-92da-9606af8f8957",
          "attributes": {}
        },
        {
          "id": "4e923ff6-a772-4b1c-8bf6-470db7fb5e2a",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f53df7d-ad12-4d6f-92da-9606af8f8957",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "ff6cef58-0ad8-438b-8907-3860276ec6f2",
      "name": "ADMINS",
      "path": "/ADMINS",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [
        "ADMIN"
      ],
      "clientRoles": {}
    },
    {
      "id": "d6913922-7c62-47c4-9a37-3f94b3490656",
      "name": "USERS",
      "path": "/USERS",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [
        "USER"
      ],
      "clientRoles": {}
    }
  ],
  "defaultRole": {
    "id": "fa6b87a5-de33-4f32-babb-c56087db5034",
    "name": "default-roles-wallet_service",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "d92a6639-d3ee-4858-ace4-65997aae9995"
  },
  "defaultGroups": [
    "/USERS"
  ],
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "19a5c70f-5b3d-401d-a881-79635a9126fd",
      "username": "admin@provider.com",
      "email": "admin@provider.com",
      "emailVerified": true,
      "attributes": {
        "name": [
          "admin"
        ]
      },
      "createdTimestamp": 1746835435314,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "26b56ff7-53d4-4beb-9a5c-93e0b2066668",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1746835450761,
          "secretData": "{\"value\":\"iFbMjRTRa6e1rPXihNlKADD9x5XeBfDyShQdIKkHgto=\",\"salt\":\"6Fn514+nTnLb0re4/0aRSg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-wallet_service"
      ],
      "notBefore": 0,
      "groups": [
        "/ADMINS",
        "/USERS"
      ]
    },
    {
      "id": "749700f7-b858-4845-9117-27aaf8d81929",
      "username": "alice@example.com",
      "email": "alice@example.com",
      "emailVerified": true,
      "attributes": {
        "name": [
          "Alice Santos"
        ]
      },
      "createdTimestamp": 1746843697207,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "2c28380d-10e0-4952-b7a5-713d0086d96e",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1746843750705,
          "secretData": "{\"value\":\"lhcQnODodvfPA6UXtWB3wLtfK08DzPzQeEx1uqx6dBU=\",\"salt\":\"uF/oCiWQrvFslqkx1MO+NQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-wallet_service"
      ],
      "notBefore": 0,
      "groups": [
        "/USERS"
      ]
    },
    {
      "id": "a5d0d21e-8231-4112-9108-98d8f2e3df6c",
      "username": "bruno@example.com",
      "email": "bruno@example.com",
      "emailVerified": true,
      "attributes": {
        "name": [
          "Bruno Lima"
        ]
      },
      "createdTimestamp": 1746843771737,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "905b0283-d12d-4853-b73b-3310adcdbbc2",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1746844170022,
          "secretData": "{\"value\":\"uLsaaEDw2TQDooWq2OEJerHJKihozcqxeE8mw2Ax4bM=\",\"salt\":\"lfG/k4dxFGIFd7sgwAMB9w==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-wallet_service"
      ],
      "notBefore": 0,
      "groups": [
        "/USERS"
      ]
    },
    {
      "id": "cf294c6c-46f4-46eb-93c0-5a1df65448c5",
      "username": "carla@example.com",
      "email": "carla@example.com",
      "emailVerified": true,
      "attributes": {
        "name": [
          "Carla Mendes"
        ]
      },
      "createdTimestamp": 1746844149135,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "193f1a1d-8489-40d1-9a81-e75de4f5fb82",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1746844182114,
          "secretData": "{\"value\":\"8xjdRnwgn26KqyaZlvN1b1hcEROcEnpXQrFuWjq2Nx0=\",\"salt\":\"t7Pz+L8BlNOpVmtewVHIjA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-wallet_service"
      ],
      "notBefore": 0,
      "groups": [
        "/USERS"
      ]
    },
    {
      "id": "7274d6b0-2768-47dd-bc4f-294143c6a788",
      "username": "service-account-wallet-client",
      "emailVerified": false,
      "createdTimestamp": 1746719233971,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "wallet-client",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-wallet_service"
      ],
      "clientRoles": {
        "wallet-client": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "7f53df7d-ad12-4d6f-92da-9606af8f8957",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/wallet_service/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/wallet_service/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "38ca4ed8-1378-426d-9434-e1822642bcc7",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/wallet_service/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/wallet_service/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "1bf59f5e-fb8e-44f6-b91b-4200acf6b95c",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "02ee54b0-3b27-4498-a60a-c107638e39a0",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c64aec93-0984-4326-b8e4-89dc59234a61",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d493b43c-e5da-450d-8241-a5c0f264a9df",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5c3e7162-3d8f-411b-925d-814e884776fb",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/wallet_service/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/wallet_service/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "bb3a2692-1400-4d64-9760-1885049cb157",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fdf3281a-e505-4fb4-8296-0b215f09f326",
      "clientId": "wallet-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "9df0GAfuDNwv0hl6r7KuNhTPdiDQfvBX",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1746835423",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "false",
        "frontchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "service_account",
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:wallet-client:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": [
              "/*"
            ]
          }
        ],
        "policies": [
          {
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "regex",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "pattern": ".*",
              "targetClaim": "sub"
            }
          },
          {
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:wallet-client:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    }
  ],
  "clientScopes": [
    {
      "id": "979f427d-be38-4e40-b666-ab8a57ec113e",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "e70ec091-7d75-46a4-8b11-958cf17344c6",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "2a9f7d89-3038-435c-aae3-d43a740b3a2b",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "cc0c3439-d3d1-4c89-8a16-42aedc0dbde7",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "d51ce727-9aaa-4f41-8c98-dddf1f260025",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "d9db9bc6-192c-4032-aa16-83b3ef59eab2",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "61faef2b-206c-4504-a3ac-3484385412a2",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "c4e72c70-8015-451b-bd0a-5d9510e45090",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "7d3eeb1f-e65c-40a1-8b5c-725b8d25f99b",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b6db96b5-35af-4b88-8e71-a247637488cc",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8b5a2643-8654-401a-a3d0-16a470a4d011",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "301559e0-1110-437a-a76b-a9c739e01992",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f5cd6e61-d61f-4c36-a083-692c28a40281",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d2f1b8b0-cce9-4d34-8571-46a8022fd795",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de0e33ab-b787-41d5-84c2-171b8ea2b07e",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d55551ff-397e-45d7-8c1e-40df4e3ab210",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "181acd5a-5a4e-4635-a8a9-105165d81fdc",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "5ca76a35-bb0c-43a9-bb68-915d19ee7f2b",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f4f52b91-7084-4f06-ba0f-cb355b67ca56",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c85b9f30-5e20-4638-bf78-0b5b8797dd17",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "678467ba-87fc-4d27-b34e-9bc2e252ead9",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "13e2cd40-9e6e-4609-a0d5-80d68f371fb3",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "537383ac-56c7-4860-8e79-1a71f7047743",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b7807322-9f32-4aa4-81c0-39a322bf9720",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "f2f77223-4357-4a54-9c0e-e272e58d6ecd",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b5047d6e-bbf7-43c6-b96b-7b2d6621872b",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1e636124-2e17-4bf3-b77a-014edd3870e5",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "eacaad0e-7b84-4678-83ac-8472718f03b8",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "9254f925-ad44-4a88-a23f-b8230c0d7f9b",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "35a1a522-e533-4b1c-8677-12f172b20819",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "7c85a454-47ca-42ec-a0d0-6c658a10c8f8",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "f9fde9ea-c84f-4a2d-9a12-888fa8daf837",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "16dd92fb-b0cb-494d-b4b0-329202c6c013",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "c7f801d5-284b-4b63-b9b9-b5843a2aa0fc",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ef4c83b1-6a74-405f-a888-b57002b4fd38",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "57ffdec6-5348-471f-b751-6506320ac1dd",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "f25621e1-a690-45ca-88d4-9567ae4ad2da",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "495559c3-0cde-44d5-a22e-27d7e744ae61",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "cd813a1b-a5af-4810-87b1-b3bac415a7ff",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "2db86921-483a-4fc3-89d7-3ee2427c2581",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "06720a2f-3bd8-41ac-bb29-9553fae88483",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f6a1079a-e610-4396-867b-b1edca339090",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0c00ab34-11d3-438a-a527-65fb49a409b9",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "0235a066-6131-4cfe-aa75-fd911719af67",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0354e14d-3299-4ea6-a702-b3b4de2daa34",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "065d93f2-f9b0-4771-95c1-61285f454b52",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "3d3e1dcc-b9be-44df-85bb-907db41a98b7",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "2a87d33b-4145-42e5-869f-118236b7cab1",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "7a7953b8-95d2-469c-a9fc-1e791cd34a40",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "cdc59518-2d5b-4a53-b402-3ec9f8af3acc",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "2b8b483c-a3bd-42d6-95fe-f8f73a69516f",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "e7b35b7a-4f1e-4522-a652-69b1d35eaa83",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "4f308c93-b58f-4ff8-8162-ce217344c0a7",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "6fc9762a-a6a6-4930-ae0c-4cb79c4a000c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "8ff5bd9d-9e81-4ab1-a74e-ae0eaf3d6f8d",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "805269f2-7d6b-4ee5-8e3a-f77fe78a3506",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "293ce1b0-8acd-4a87-8524-00a186b4bb42",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"name\",\"displayName\":\"${name}\",\"validations\":{},\"annotations\":{},\"permissions\":{\"view\":[],\"edit\":[\"admin\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "f52aaf18-f37d-41c4-af22-467eaebd50bf",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "e91ecee5-22bd-4bbb-a2e0-35c9080ad79d"
          ],
          "secret": [
            "UKyuqtLIPn5JGfKogQaDcQ"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "e074b557-ee4d-459f-a9ea-b1319ddc1038",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "716fd47f-94e9-4b4f-95c5-c6d43982d88e"
          ],
          "secret": [
            "uPPvUBNXCXY-vIef0k3d_aCT4gv784eJRmhipEHhpoOgfq5V613ZVZYnv8xJvplcQg0fAmjRxdugbwvykq4WYFZZv5BHM49b0-Jq_Oh5zzwYVr0Utj5ejrF40Y62BjGLJqEHgks70lCZRk1wmUnKl49L0JUXoJMU6zZhABt1GHU"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "6c7df451-0789-4960-8de1-68c9efdf8d58",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAt5s4uaq4niasA5T3mru/hEEhPT1BPCNMmOLHv35hMnn/pUQV6O36SvlWfbqjCrx7hk4xObHB7NinHzUOJbSKN9jn7w82Tv+YWjhQ9rJG3QjHCKOzvRbj4OaX2HRXGigPwNiRL9pzEUKOxV4jWu7QAh3YzNo2qs9R1tkL+8PtTHTA6CnEJ3FY+4GNZeBsJ9RE5v8XEvpgS2RvJU65/k2GnDgrfqbprv9+iWhj/RewNE3xsRtIrGhExrgqgtUxmFQDF4mKAFh9spltIGcKPXnH6NO71SHiGR2VA/Pe3P6aZP2OLRRytGZa948wyG8OKKOfVRohzw/g/8mcYGQaaREyfwIDAQABAoIBAAuUjTPcqi9DZicFrsZCIDaxuux3YBVwboTYDNwtlujNnAuq6yzZUaeH6WYdrune8HWMmfs3FHGhSo0j1gQXyn3yPtKrpXO/GDdchPLCVMjdJFyNoqkC+BV3xcz/rXy3WSMDJckcYJSOm52kLduu40y24DUvcDI+yD0iTGixN1bSjOHK2iwL2QgWyk/Reo0huE2dia+WyiPdpV8CR2fzn3k41xRPYXIfKNF3ej3TDIN8M2BOn2px/FX+m3rigUAkL49KQciz658VfBEaVIo3r8PHEiBGLir52ovdpEqv63FP/vQo4dmO7zv/JXJiMheBTr8M2ylJVlCeYjKtMezNhuUCgYEA7MmxaNcsMPz8fSQLQY9eWSgzksnRQptC9qJILvQpkU5aYli+i+2ztLOj18Dn+MiI3CjlxPIT1eYdODvCsA/jau2M1zLoB2Yj8COKYR8cEt8ZvLXQkr9ZkoSlcdnUIDJWh/ZxJYBh/eT2GZVk4ZUJRR7YeEeHh59V6nc3XlUo7KsCgYEAxoDl6xjmnFbY5VyhtUmiVLNwrGEpQbFCP+U98ovbeGUaTnsBjp67Hd7KqpBF/c5C0RCN+NbDXl+aNGwrzBdaqFxpcrw9gIxeAZyf3VM+J0aOD6MXj6CdnCOyINB93LAZ/ILjN0BqwGrcIvb8pK7kAZBM+5zeXiX5kxCCQgIK6X0CgYEAgsCZO5hd6as5TW0C3i/p3HeriunwqMQNhR11mJ/w+DD5DgeNKL2Ylzb/SVtXfPRXRqM6xbcbJulLx0qQpiIP5XLJa+fLYpKPU8J8XkcMfIs/rgoD45TQRG0E4spzLVg+mhOGxTuQYN/22Ye6Tiq7FLUEud5dw5FDoxYzt950m8MCgYEAl/xrjkVDlSK98WeqfQcDHr1BoQrHrv/MzOV2N/aztQwcR0jRWWTZujYykMPkgz9hU3fMbGHrtp+Wj1rfceXTySLwriPJJ1rSQ4Ort6eb6DCSZxCl4pfE9Z8zLQLVy5qeWwPQeyZ8VhW7tZ3MtT8fXr8g4moqrIWBAQRb57RurHUCgYAENOf4mDwClScXrHveeHwY2FOfJpuQcH5EtwXQFWtVJS1B5YH97QHwMdnzNdseqYK2OqYIvwzDwPDQtPwJj2EJba9aeFxYhL7Qe1NjBGcE58352NcZmh4bgsKdWdY5nXdLSmmxf9nGJHOQb+Fzt/+ZiO9MRkJCjx4LO0QwXsg5TA=="
          ],
          "certificate": [
            "MIICqzCCAZMCBgGWt3/AaDANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA53YWxsZXRfc2VydmljZTAeFw0yNTA1MTAwMDAwMjVaFw0zNTA1MTAwMDAyMDVaMBkxFzAVBgNVBAMMDndhbGxldF9zZXJ2aWNlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt5s4uaq4niasA5T3mru/hEEhPT1BPCNMmOLHv35hMnn/pUQV6O36SvlWfbqjCrx7hk4xObHB7NinHzUOJbSKN9jn7w82Tv+YWjhQ9rJG3QjHCKOzvRbj4OaX2HRXGigPwNiRL9pzEUKOxV4jWu7QAh3YzNo2qs9R1tkL+8PtTHTA6CnEJ3FY+4GNZeBsJ9RE5v8XEvpgS2RvJU65/k2GnDgrfqbprv9+iWhj/RewNE3xsRtIrGhExrgqgtUxmFQDF4mKAFh9spltIGcKPXnH6NO71SHiGR2VA/Pe3P6aZP2OLRRytGZa948wyG8OKKOfVRohzw/g/8mcYGQaaREyfwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB5aoSw25u0JAummi6jwVCKzrLbY4XYONHfkHscg6xfV9Dlfxem+PwlVhV7LkmtYDqpjgKyC6C2XApeHcaPoZd8fqzb7iTuQRKVRzeAfu3MMFFuqxmjEU/4PJuzzAjUURhP5htrWpk4XNemycWdq6oYC5DBPPSSWcI2X3cBkNrMKjxSEq3rgZMUiieObN/u5hU6HGMFS+hPhVws9OnJTSk8xRUASfaDgfMpO6M0Ei0KiRtlDNDJsXYR2kOevuYLMhmONcCgmk3UJjmlM0at5GVfXnKeRiaRHBjtPwzhMKS5fGN6d9wTPTultU2iuhpQXpDNS6/aBJGH9MWacjuHNhg8"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "ae0c2668-8491-43f7-8f2d-ee75a889ddd1",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAsvdpj9mr69y55iZ0dUBFO/Y7guqOXt7szGdLWVJLqLb0rPiway+SnQlWCrrucYVHIxcTpPjB4Oc2BK+T5idz3x11hrYj6LrR+AVpnInHwI9YGlFn5tI+Da5jUBgs67RqhI4XWSLu/5FDWoxmwxYh9bsVetWJJQKXMCeIl6J/yj2w8+kjAz5DRXKYV2X72YXfrgZapwaTGYVNWntc5zwCpv+vmHaQfQeuv6StEIux+7Bx1N7y9zX6TRRH916AH0SNmgbPugHMgY/XXEIz4w5rwsemc9JSl1b5ZLtFZLljdrCnqI+dDzazRSHw9Rdcmm++rSzo+pt/PDxPvesGifL/IwIDAQABAoIBAArFoDxLqnDHQlvl/fsouSzDb2WRNKyP18pIgAffpN+CKPatqVYU8PWJdaeuWg0fK974KUiJaIde+Ki44Lq+WS0ZcCosQGZmXZ5YxQ3qWnREAdY5BtClNZ2hMifErL+AhoDKr1Zq0d6JdyJgx7aqWF+auSTsQWr8Mu7FEmWoyZmkmcluIh+AWgg8zdA/ayiZT9oROqgYc29YFJy0FXTg+64Vn67DqWl6SspJkhlUUVz3PwoTX64s5Afehi6Dbcph4VtMc/bDmmz5ee3VQ2yCbUDNfmcI5/erZFffVzO6woFmzU87OqDO1v8HSlOZya+bp1pwzHbw8U1DbuRfO+I5rtECgYEA5UIUDDiPwi/CiZcir5JWxgPg16z5I3n4RpbjV8AwFtleVygpvcJ+G5wf1Z0/lNJ56V2aJ3bBoADF7lL/di6VZuRFY4tCbpBfp1nAG9l18A9651nS/qeDRgf/84hgCw6rtuBIIMASULVwMtILdegHxrjtuTKfVyUwjn2yJBub98cCgYEAx9eQlgPY7zMY17FXzQi4yLZoLfYWNMCuIIrfDRgXb8d9D6Q3ssSuPwlzKhJbNjb5nYlpzW9I0Ikk5hmaE3iD0QL/CWpwM3YmAT3gi/Wo+45CdSubn4boQDHgXx3xBIxG9deaei/PNWapC4YSsmKf70BtSrWBhwAcZuHwcSeWFcUCgYASfNqrBaCqMznH6LU2XWG8BDIMknlg4AQihSZ+PBRks1DFTIrZL6cFyPhUPKMU+Eg2hoLY7d29bnKHvo+1UxpfOsdRuLg5vFDKaRVx6X52RnlN0NOQD6gpbJm6ZOQB4EP+smV+pp6TfZ43qvKbpoOCBgW9qpRo7anVw9Mq0EMqnwKBgDYonH2bY1JIFcZ2wGXHpFR44rj6BUCcq1QUbqicy9U2ShVQGuwu004wIG7ZdLC3q2RfVjYfn6ssT7ywWYpHUen2FuoVV30K2vfhLhagKACsqCQbAlz0ccLcAYOlmKjz31NG8A2HIW/Gd6+w0SZZBiEP486obAcLJ6dWOhRgdxNFAoGAMyQqy+uqURqDgBN//9ST4PuluIaQDlxAxIhNo4FwiEtliQCBetcayZCuRoSNcmbJmEhGJZMvQco2QjdeELTL1bSS0KkeI7EYSyovgHPohMAZfK27HTu60IxxH/b0QU4mRfXKbAoBR0nssc2RvIp+PGXlU4V17o2LpdbaNrW4VAk="
          ],
          "certificate": [
            "MIICqzCCAZMCBgGWt3/A4TANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA53YWxsZXRfc2VydmljZTAeFw0yNTA1MTAwMDAwMjVaFw0zNTA1MTAwMDAyMDVaMBkxFzAVBgNVBAMMDndhbGxldF9zZXJ2aWNlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsvdpj9mr69y55iZ0dUBFO/Y7guqOXt7szGdLWVJLqLb0rPiway+SnQlWCrrucYVHIxcTpPjB4Oc2BK+T5idz3x11hrYj6LrR+AVpnInHwI9YGlFn5tI+Da5jUBgs67RqhI4XWSLu/5FDWoxmwxYh9bsVetWJJQKXMCeIl6J/yj2w8+kjAz5DRXKYV2X72YXfrgZapwaTGYVNWntc5zwCpv+vmHaQfQeuv6StEIux+7Bx1N7y9zX6TRRH916AH0SNmgbPugHMgY/XXEIz4w5rwsemc9JSl1b5ZLtFZLljdrCnqI+dDzazRSHw9Rdcmm++rSzo+pt/PDxPvesGifL/IwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA9Zlj3GOCw+VXgRuyulSr4MmqFAyjI0TodTTrHtMxb9YL7cpEIjGcXPSGjmNSOjSCEHXeZX4NG4qnkvrhXLyXaUEw4d43AZ1UJilSzvGmqys1sfV+byCAdWqOvInWyM07cNdy7xMPjKs/yrIFkZcmIAoLrip1UkJAsrYTEGX50+6nNH1dVCspQ/H2mWNa3GcEAEUPoWN9BGxi90V3w5Pb5msHn6vxW9RY2XlTaGDCYzJwq+hkojcpeTnNNjW6eufZB6HGIlwvPWbBUu9pK8H6OfWNNx3s7rGcF6RsagD0D5oYzhEXEeHlX7DNFphSOMxhfmbKzFnWgRk+t7oKwOF0u"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "7e9ed21d-bec5-43b6-980a-d72313b206c3",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "595b49f0-2cbb-4042-998e-7122ef2bad85",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "26930424-d564-4d04-9366-13ebdeef2ebd",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b02f91a4-60af-4f23-a03a-f7f6f95ea39e",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b05e1eb8-4975-4396-a1b5-37b607fc0047",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1822afde-c0ae-4a1c-950b-52a484a07fa2",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0d0dc92d-81be-476a-b04d-0329c1afcd5d",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "626eb0f9-a641-4f5c-980d-19f52996bed3",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5e476d03-bb4c-4eea-94d1-d07172e4bc88",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fbbe9b19-9a7e-4eb5-9912-fb6821324690",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7942ad5d-d3a9-447f-ba82-74e29e3c66e8",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3e6afdbc-6173-4e4a-91af-e9978b8f1f9f",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fed453de-12a4-4b4c-b096-4040a403fa60",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f75e2c2a-db58-4671-a2a1-100fb2f82b23",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "657c331d-5303-4c59-a63a-b40700c3fb3c",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b6ab83c0-5524-4080-8035-dc72fd0e4eab",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "26fbce25-e427-4872-a00a-b15a3a728611",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c2a6a843-b19c-4b59-afa3-796910ecbda4",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e10b90d3-4536-44f9-8a01-58ad6ca54d8d",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1cea3a6e-cd8f-4365-83fb-a6b8559de48d",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5c66dccb-6255-4b9a-85e0-39de80ac9888",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "e4b30cc2-5f17-4f84-b85e-b0f74897be64",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "8588557a-02bf-4aa6-ac52-b4f9a5c5ff6d",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan.verify-email": "",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email": "",
    "clientOfflineSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan.execute-actions": "",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "shortVerificationUri": "",
    "actionTokenGeneratedByUserLifespan.reset-credentials": ""
  },
  "keycloakVersion": "26.2.4",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}